# -*- encodign: utf-8 -*-

from odoo.tests.common import TransactionCase
from odoo.exceptions import ValidationError


class GlobalTestOpenAcademySession(TransactionCase):
    '''
    This create global test to session
    '''

    # Seudo-constructor method
    def setUp(self):
        super(GlobalTestOpenAcademySession, self).setUp()
        self.session = self.env['openacademy.session']
        self.partner = self.env.ref('base.res_partner_1')
        self.course = self.env.ref('openacademy.course0')
        self.partner_attendee = self.env.ref('base.res_partner_12')

    # genric method

    # Test methods
    def test_10_instructor_is_attende(self):
        '''
        Check that raise of 'A session's can't be attendee
        '''

        with self.assertRaisesRegexp(
            ValidationError,
            "A session's instructor can't be an attendee"):
            self.session.create({
                'name': 'Session test 1',
                'seats': 1,
                'instructor_id': self.partner.id,
                'attendee_ids': [(6, 0, [self.partner.id])],
                'course_id': self.course.id,
                })

    def test_20_wkf_done(self):
        '''
        Check that the workflow work fine!
        '''
        print("Process deprecated!!!")

    #    session_test = self.session.create({
    #        'name' : 'Session test 1',
    #        'seats' : 1,
    #        'instructor_id' : self.partner.id,
    #        'attendee_ids' : [(6, 0, [self.partner_attendee.id])],
    #        'course_id' : self.course.id,
    #    })
    #
    #    self.assertEqual(session_test.state,'draft',
    #       'Initial state shuld be in "draft"')
    #
    #    session_test.signal_workflow(button_confirm)
    #    self.assertEqual(session_test_state, 'confirmed',
    #    "Signal confirm don't work fine!")
    #    #print("*** Session_test.Status:", session_test.status)
    #
    #    session_test.signal_workflow(button_done)
    #    self.assertEqual(session_test_state, 'done',
    #    "Signal done don't work fine!")
    #    self.evv.cr.commit()
    # Just to test the data generated by the test. Please don't use!
